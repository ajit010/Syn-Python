DAY 5 :


Cloudskillboost :


1. Open Cloudskillboost website and sign in to your account

2. Search a lab "Create a Virtual Machine"

3. Make sure to extend time period for lab - 40 min to 1 hour ...

4. Start Lab and use incognito mode to access temporary GCP account ..

===================================================================================

1. Become a member of cloud innovators program 

Ask you to sign in with google account ..

2. Sign out from synechron mail id in cloudskillboost ..

3. Sign in to cloudskillboost using your own gmail account and it will receive 35 credits



Go to EXplore in cloudskillboost and search for VPC networking fundamentals :

>>  

network -- 

ipv4 -- 32 bits

8 bits each octet >>> 0 -255

10.0.0.0/16 >>>  vpc

10.0.1.0/24  -- subnet1  >> 256  >> 10.0.1.0  --- 10.0.1.255

10.0.2.0/24 -- subnet2   >> 256  >> 10.0.2.0  --- 10.0.2.255

----------------------- around 256 subnets

10.218.




  32 bits >>> 16 bits are reserved

10.0  >> reserved    0.0  

256 * 256  = 65536 ip addresss into subdivision

===========================================================================


Work on  LABs :

1. App Engine: Qwik Start - Python 

2. App Dev: Setting up a Development Environment - Python

3. VPC Network peering

============================================================================


1. Employee Management System:
•	Create a Python program that manages employee records.
•	Utilize basic Python concepts like variables, data types, and flow control.
•	Implement functions to perform CRUD (Create, Read, Update, Delete) operations on employee records.
•	Organize functions into modules and packages for better code organization.
•	Implement a class for representing an employee with attributes and methods.
•	Integrate the program with an RDBMS (Relational Database Management System) like MySQL using libraries such as mysql-connector
•	Use debugging techniques to identify and fix any errors or issues.



2. Online Shopping System:
•	Develop a Python program for an online shopping platform.
•	Implement flow control to manage user interactions such as browsing products, adding items to the cart, and checking out.
•	Define functions to handle shopping operations like adding products, removing products, and calculating the total bill.
•	Organize code into modules and packages based on functionality.
•	Create classes to represent products, shopping carts, and orders with appropriate attributes and methods.
•	Connect the application to an RDBMS to store product information and order history securely.
•	Debug the program to ensure it functions correctly and handles errors gracefully



For Instructions - Refer to https://github.com/ajit010/Syn-Python

============================================================================================================
